# Generated by Django 3.2.23 on 2024-02-02 23:25

import colorfield.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('recipes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='IngredientsInRecipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Количество ингредиента не может быть меньше 1'), django.core.validators.MaxValueValidator(32000, message='Количество ингредиента не может быть больше 32000')], verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Ингредиент в рецептах',
                'verbose_name_plural': 'Ингредиенты в рецептах',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='TagsRecipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Тэг рецепта',
                'verbose_name_plural': 'Тэги рецепта',
                'ordering': ('id',),
            },
        ),
        migrations.DeleteModel(
            name='Subscriptions',
        ),
        migrations.AlterModelOptions(
            name='favorite',
            options={'default_related_name': 'favorite', 'ordering': ('id',), 'verbose_name': 'Избранное', 'verbose_name_plural': 'Избранное'},
        ),
        migrations.AlterModelOptions(
            name='ingredients',
            options={'ordering': ('name',), 'verbose_name': 'Ингридиент', 'verbose_name_plural': 'Ингридиенты'},
        ),
        migrations.AlterModelOptions(
            name='recipes',
            options={'ordering': ('id',), 'verbose_name': 'Рецепт', 'verbose_name_plural': 'Рецепты'},
        ),
        migrations.AlterModelOptions(
            name='shoppingcart',
            options={'default_related_name': 'shopping_cart', 'ordering': ('id',), 'verbose_name': 'Список покупок', 'verbose_name_plural': 'Список покупок'},
        ),
        migrations.AlterModelOptions(
            name='tags',
            options={'ordering': ('name',), 'verbose_name': 'Тег', 'verbose_name_plural': 'Теги'},
        ),
        migrations.AddField(
            model_name='favorite',
            name='recipe',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='favorite', to='recipes.recipes', verbose_name='Рецепт'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='favorite',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='favorite', to='users.foodgramuser', verbose_name='Пользователь'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ingredients',
            name='measurement_unit',
            field=models.CharField(default=1, max_length=200, verbose_name='Размерность'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='ingredients',
            name='name',
            field=models.CharField(default=1, max_length=200, verbose_name='Название ингридиента'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipes',
            name='author',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to='users.foodgramuser', verbose_name='Автор'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipes',
            name='cooking_time',
            field=models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1, message='Время приготовления не может быть меньше 1 минуты'), django.core.validators.MaxValueValidator(32000, message='Время приготовления не может быть больше 32000 минут')], verbose_name='Время приготовления'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipes',
            name='image',
            field=models.ImageField(default=None, upload_to='recipes/images/', verbose_name='Картинка'),
        ),
        migrations.AddField(
            model_name='recipes',
            name='name',
            field=models.CharField(default=1, max_length=200, verbose_name='Название'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='recipes',
            name='text',
            field=models.CharField(default=1, max_length=2000, verbose_name='Описание'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='shoppingcart',
            name='recipe',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='recipes.recipes', verbose_name='Рецепт'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='shoppingcart',
            name='user',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='users.foodgramuser', verbose_name='Пользователь'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tags',
            name='color',
            field=colorfield.fields.ColorField(default='#FFFFFF', image_field=None, max_length=25, samples=None, unique=True, verbose_name='Цвет'),
        ),
        migrations.AddField(
            model_name='tags',
            name='name',
            field=models.CharField(default=1, max_length=200, unique=True, verbose_name='Название тэга'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tags',
            name='slug',
            field=models.CharField(default=1, max_length=200, unique=True, verbose_name='Slug'),
            preserve_default=False,
        ),
        migrations.AddConstraint(
            model_name='favorite',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_favorite'),
        ),
        migrations.AddConstraint(
            model_name='ingredients',
            constraint=models.UniqueConstraint(fields=('name', 'measurement_unit'), name='unique_ingredient'),
        ),
        migrations.AddConstraint(
            model_name='shoppingcart',
            constraint=models.UniqueConstraint(fields=('user', 'recipe'), name='unique_shopping_cart'),
        ),
        migrations.AddField(
            model_name='tagsrecipes',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags_recipes', to='recipes.recipes', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='tagsrecipes',
            name='tag',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags_recipes', to='recipes.tags', verbose_name='Тэг'),
        ),
        migrations.AddField(
            model_name='ingredientsinrecipes',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_in_recipe', to='recipes.ingredients', verbose_name='Ингредиент'),
        ),
        migrations.AddField(
            model_name='ingredientsinrecipes',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient_in_recipe', to='recipes.recipes', verbose_name='Рецепт'),
        ),
        migrations.AddField(
            model_name='recipes',
            name='ingredients',
            field=models.ManyToManyField(through='recipes.IngredientsInRecipes', to='recipes.Ingredients', verbose_name='Ингредиенты'),
        ),
        migrations.AddField(
            model_name='recipes',
            name='tags',
            field=models.ManyToManyField(related_name='recipes', through='recipes.TagsRecipes', to='recipes.Tags', verbose_name='Тэги'),
        ),
    ]
